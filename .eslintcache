[{"/home/fouad/email/src/context/Gmail.ts":"1","/home/fouad/email/src/components/Signin.tsx":"2","/home/fouad/email/src/components/mail/Editor.tsx":"3","/home/fouad/email/src/components/mail/Contacts.tsx":"4","/home/fouad/email/src/components/mail/Headers.tsx":"5","/home/fouad/email/src/components/Inputs/AdvancedEditor.tsx":"6","/home/fouad/email/src/components/Gmail.tsx":"7","/home/fouad/email/src/components/settings/ContactAdd/ContactAdd.tsx":"8","/home/fouad/email/src/App.tsx":"9","/home/fouad/email/src/utils/gmail/GrabContact.ts":"10","/home/fouad/email/src/components/design/ContactItem.tsx":"11","/home/fouad/email/src/components/settings/settings/Settings.tsx":"12","/home/fouad/email/src/constant/constant.ts":"13","/home/fouad/email/src/components/mail/ListMessages.tsx":"14","/home/fouad/email/src/components/Loader/Loader.tsx":"15","/home/fouad/email/src/components/Inputs/TextareaChat.tsx":"16","/home/fouad/email/src/components/settings/global/GeneralSettings.tsx":"17","/home/fouad/email/src/utils/gmail/emails.ts":"18","/home/fouad/email/src/utils/gmail/EmailContentFetch.ts":"19","/home/fouad/email/src/components/Error/ErrorLoading.tsx":"20","/home/fouad/email/src/utils/gmail/SendMail.ts":"21","/home/fouad/email/src/utils/gmail/ListEmailId.ts":"22","/home/fouad/email/src/reducer/gmailReducer.ts":"23","/home/fouad/email/src/utils/gmail/LoadContactGmail.ts":"24","/home/fouad/email/src/components/mail/AttachedFiles.tsx":"25","/home/fouad/email/src/utils/gmail/GetProfileEmail.ts":"26","/home/fouad/email/src/components/design/EmailText.tsx":"27","/home/fouad/email/src/index.js":"28","/home/fouad/email/src/utils/gmail/Connect.ts":"29","/home/fouad/email/src/utils/gmail/Label.ts":"30","/home/fouad/email/src/utils/gmail/getMessageBodyAsText.ts":"31","/home/fouad/email/src/utils/gmail/getMessageBodyAsHTML.ts":"32","/home/fouad/email/src/enum/gmail/GmailReducer.ts":"33","/home/fouad/email/src/components/mail/RightSide.tsx":"34"},{"size":193,"mtime":1607520642947,"results":"35","hashOfConfig":"36"},{"size":1123,"mtime":1606477002827,"results":"37","hashOfConfig":"36"},{"size":819,"mtime":1607377557274,"results":"38","hashOfConfig":"36"},{"size":1550,"mtime":1607520762623,"results":"39","hashOfConfig":"36"},{"size":2166,"mtime":1606748085776,"results":"40","hashOfConfig":"36"},{"size":1951,"mtime":1607377755743,"results":"41","hashOfConfig":"36"},{"size":9639,"mtime":1607521069136,"results":"42","hashOfConfig":"36"},{"size":5804,"mtime":1607450976488,"results":"43","hashOfConfig":"36"},{"size":2381,"mtime":1607511306887,"results":"44","hashOfConfig":"36"},{"size":692,"mtime":1607453163047,"results":"45","hashOfConfig":"36"},{"size":803,"mtime":1607522779623,"results":"46","hashOfConfig":"36"},{"size":3874,"mtime":1607463976414,"results":"47","hashOfConfig":"36"},{"size":476,"mtime":1607436345737,"results":"48","hashOfConfig":"36"},{"size":2306,"mtime":1607521204173,"results":"49","hashOfConfig":"36"},{"size":316,"mtime":1606674133173,"results":"50","hashOfConfig":"36"},{"size":3708,"mtime":1607422421510,"results":"51","hashOfConfig":"36"},{"size":1584,"mtime":1607451820014,"results":"52","hashOfConfig":"36"},{"size":428,"mtime":1607458415882,"results":"53","hashOfConfig":"36"},{"size":653,"mtime":1607467001842,"results":"54","hashOfConfig":"36"},{"size":648,"mtime":1607446545549,"results":"55","hashOfConfig":"36"},{"size":1579,"mtime":1607467001786,"results":"56","hashOfConfig":"36"},{"size":1109,"mtime":1607467001786,"results":"57","hashOfConfig":"36"},{"size":3667,"mtime":1607424241433,"results":"58","hashOfConfig":"36"},{"size":757,"mtime":1607519098855,"results":"59","hashOfConfig":"36"},{"size":3156,"mtime":1607378226862,"results":"60","hashOfConfig":"36"},{"size":420,"mtime":1607519024111,"results":"61","hashOfConfig":"36"},{"size":1169,"mtime":1607509096271,"results":"62","hashOfConfig":"36"},{"size":427,"mtime":1606403862086,"results":"63","hashOfConfig":"36"},{"size":1051,"mtime":1607508100230,"results":"64","hashOfConfig":"36"},{"size":432,"mtime":1607467001842,"results":"65","hashOfConfig":"36"},{"size":600,"mtime":1607508543956,"results":"66","hashOfConfig":"36"},{"size":484,"mtime":1607508477904,"results":"67","hashOfConfig":"36"},{"size":267,"mtime":1607520617679,"results":"68","hashOfConfig":"36"},{"size":1335,"mtime":1607522729083,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e0i7g5",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/fouad/email/src/context/Gmail.ts",[],"/home/fouad/email/src/components/Signin.tsx",["153"],"import { CircularProgress } from '@material-ui/core';\nimport { Row, Col, Button } from 'antd';\nimport React, { useCallback, useState } from 'react';\n\ninterface SigninInterface {\n  signin: () => any;\n  loading: boolean;\n}\n\nconst Signin: React.FC<SigninInterface> = (props) => {\n  const [clicked, setClicked] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(props.loading);\n\n  let signinClickHandler = useCallback(() => {\n    if (!clicked) {\n      setClicked(true);\n      setLoading(true);\n      props.signin();\n    }\n  }, [clicked, props.signin]);\n\n  return (\n    <Row className=\"signin-container\">\n      <Col>\n        <Row className=\"signin\">\n          <Col span={24} className=\"title\">\n            <h2>Signin</h2>\n          </Col>\n          <Col span={24}>\n            <Button onClick={signinClickHandler} className=\"google-signin\" disabled={clicked}>\n              {loading && <CircularProgress color=\"inherit\" size={14} style={{ marginRight: 10 }} />}Give gmail Access\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default React.memo(Signin);\n",["154","155"],"/home/fouad/email/src/components/mail/Editor.tsx",["156","157"],"import { Button, Col, Row } from 'antd';\nimport React, { useState } from 'react';\nimport { TextAreaChat } from '../Inputs/TextareaChat';\nimport AdvancedEditor from '../Inputs/AdvancedEditor';\n\ninterface EditorProps {\n  editor: string;\n  currentContact: string;\n  sendMessage: (content: string, header: string) => any;\n}\n\nconst EditorI: React.FC<EditorProps> = ({ editor, currentContact, sendMessage }) => {\n  return (\n    <Row className={'editor' + (editor !== 'simple' ? ' editor-advanced' : '')}>\n      <Col span={24} className=\"editor-container\">\n        {editor === 'simple' ? (\n          <TextAreaChat onSubmit={sendMessage} to={currentContact} />\n        ) : (\n          <AdvancedEditor to={currentContact} onSubmit={sendMessage} />\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default React.memo(EditorI);\n",["158","159"],"/home/fouad/email/src/components/mail/Contacts.tsx",[],"/home/fouad/email/src/components/mail/Headers.tsx",["160"],"import { Button, Col, Row } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Header } from 'antd/lib/layout/layout';\n\ninterface HeadersProps {\n  headers: Array<{ name: string; value: string }>;\n}\n\nconst dateTimeFormat = (dateString: string): string => {\n  const date = new Date(dateString);\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n  return date.toLocaleDateString('en-US', options);\n};\n\nconst Headers: React.FC<HeadersProps> = ({ headers }) => {\n  const neededHeaders = ['From', 'To', 'Date', 'Subject'];\n  const [showHeaders, setShowHeaders] = useState(false);\n\n  const showHeaderCLickHandler = useCallback(() => {\n    setShowHeaders((state) => !state);\n  }, []);\n\n  return (\n    <Row className=\"headers\">\n      <Col span={24}>\n        <Row>\n          <Col span={24} className=\"from\">\n            {headers.find((header) => header.name === 'From')?.value}\n          </Col>\n          <Col span={24} className=\"to\">\n            to me{' '}\n            <Button ghost className=\"arrow-header\" onClick={showHeaderCLickHandler}>\n              <ArrowDropDownIcon />\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      {showHeaders && (\n        <Col span={24} className=\"headers-container\">\n          {neededHeaders.map((headerAttribute, index) => {\n            const value = headers.find((header) => header.name === headerAttribute)?.value;\n            if (value === void 0 || value === '') {\n              return void 0;\n            }\n            return (\n              <Col span={24} key={index}>\n                <Row className=\"header-attribute\">\n                  <Col span={4} className=\"attribute-name\">\n                    {headerAttribute}\n                  </Col>\n                  <Col span={20} className=\"attribute-value\">\n                    {headerAttribute === 'Date' ? dateTimeFormat(value) : value}\n                  </Col>\n                </Row>\n              </Col>\n            );\n          })}\n        </Col>\n      )}\n    </Row>\n  );\n};\n\nexport default React.memo(Headers);\n",["161","162"],"/home/fouad/email/src/components/Inputs/AdvancedEditor.tsx",["163"],"import { Button, Col, Row } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\ninterface AdvancedEditorProps {\n  to: string;\n  onSubmit: (content: string, header: string) => any;\n}\n\nconst AdvancedEditor: React.FC<AdvancedEditorProps> = ({ to, onSubmit }) => {\n  const [content, setContent] = useState<string>('');\n\n  const onChangeHandler = useCallback((content: string) => {\n    setContent(content);\n  }, []);\n\n  const onClearClickHandler = useCallback(() => {\n    setContent('');\n  }, []);\n\n  const onSendClickHandler = useCallback(() => {\n    onSubmit(content, 'Content-Type: text/html; charset=\"UTF-8\"\\r\\n');\n    setContent('');\n  }, [content]);\n\n  const modules = {\n    toolbar: [\n      [{ header: [1, 2, false] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n      [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n      ['link', 'image'],\n      ['clean'],\n    ],\n  };\n\n  const formats = [\n    'header',\n    'font',\n    'size',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'indent',\n    'link',\n    'image',\n    'color',\n  ];\n\n  return (\n    <Row className=\"editor-advanced-container\" dir=\"column\">\n      <Col span={24} className=\"editor-core-container\">\n        <ReactQuill\n          placeholder={`Message ${to}`}\n          modules={modules}\n          formats={formats}\n          theme={'snow'} // pass false to use minimal theme\n          value={content}\n          onChange={onChangeHandler}\n        />\n      </Col>\n\n      <Col span={24} className=\"actions\">\n        <Button danger={true} onClick={onClearClickHandler}>\n          Clear\n        </Button>\n        <Button type=\"primary\" onClick={onSendClickHandler}>\n          Send\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n\nexport default React.memo(AdvancedEditor);\n","/home/fouad/email/src/components/Gmail.tsx",["164","165","166"],"/home/fouad/email/src/components/settings/ContactAdd/ContactAdd.tsx",["167","168","169","170","171"],"import { Modal, Row, Col, Input, Button, Alert } from 'antd';\nimport React, { useCallback, useContext, useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Remove } from '@material-ui/icons';\nimport { GmailContext } from '../../../context/Gmail';\nimport { Contact } from '../../mail/Contacts';\n\ninterface ContactAddProps {\n  visible: boolean;\n  onOk: () => void;\n  onCancel: () => void;\n}\n\nconst ContactAdd: React.FC<ContactAddProps> = ({ visible, onCancel, onOk }) => {\n  const { state, setContacts } = useContext(GmailContext);\n\n  const [contactAdd, setContactAdd] = useState<{\n    errorAdding: boolean;\n    errorContent: string;\n    contact: Contact;\n  }>({\n    errorAdding: false,\n    errorContent: '',\n    contact: {\n      kickname: '',\n      emails: [''],\n    },\n  });\n\n  const addContactCancelHandler = useCallback((event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    event.stopPropagation();\n    setContactAdd((state) => ({ ...state, addContact: false }));\n  }, []);\n\n  const addContactEmailChangeHandler = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>, index: number) => {\n      event.stopPropagation();\n      const value = event.target.value;\n      contactAdd.contact.emails[index] = value;\n      setContactAdd((state) => ({ ...state, contact: { ...state.contact } }));\n    },\n    [contactAdd]\n  );\n\n  const removeContactEmailHandler = useCallback(\n    (index: number) => {\n      contactAdd.contact.emails.splice(index, 1);\n      setContactAdd((state) => ({ ...state }));\n    },\n    [contactAdd]\n  );\n\n  const addContactEmailHandler = useCallback(() => {\n    setContactAdd((state) => ({ ...state, contact: { ...state.contact, emails: [...state.contact.emails, ''] } }));\n  }, []);\n\n  const addContactKicknameChangeHandler = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    event.stopPropagation();\n    const value = event.target.value;\n    setContactAdd((state) => ({ ...state, contact: { ...state.contact, kickname: value } }));\n  }, []);\n\n  const addContactSaveHandler = useCallback(\n    (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      event.stopPropagation();\n      if (contactAdd.contact.kickname === '') {\n        setContactAdd((state) => ({ ...state, errorAdding: true, errorContent: 'Cannot accept an empty name' }));\n      } else {\n        if (state!.contacts.map((contact) => contact.kickname).includes(contactAdd.contact.kickname)) {\n          setContactAdd((state) => ({ ...state, errorAdding: true, errorContent: 'Given name already exists' }));\n        } else {\n          for (const contact of contactAdd.contact.emails) {\n            if (typeof contact === 'string' && contact !== '') {\n              if (/^[a-zA-Z0-9\\.\\-]+@[a-zA-Z0-9\\.]+\\.[a-zA-Z0-9]+$/.test(contact)) {\n                if (state!.contacts.findIndex((contactCache) => contactCache.emails.includes(contact)) === -1) {\n                  setContacts && setContacts([...state!.contacts, { ...(contactAdd.contact as Contact) }]);\n                  setContactAdd({\n                    errorAdding: false,\n                    contact: {\n                      kickname: '',\n                      emails: [''],\n                    },\n                    errorContent: '',\n                  });\n                  onOk();\n                } else {\n                  setContactAdd((state) => ({\n                    ...state,\n                    errorAdding: true,\n                    errorContent: `Contact ${contact} already exists`,\n                  }));\n                  return void 0;\n                }\n              } else {\n                setContactAdd((state) => ({\n                  ...state,\n                  errorAdding: true,\n                  errorContent: `The given email (${contact}) it is not correct mail address`,\n                }));\n                return void 0;\n              }\n            } else {\n              setContactAdd((state) => ({\n                ...state,\n                errorAdding: true,\n                errorContent: 'Cannot add contact without email address',\n              }));\n              return void 0;\n            }\n          }\n        }\n      }\n    },\n    [contactAdd]\n  );\n\n  return (\n    <Modal title=\"Add new contact\" visible={visible} onOk={addContactSaveHandler} onCancel={onCancel}>\n      <Row className=\"add-contact-modal\">\n        {contactAdd.errorAdding && (\n          <Col span={24} className=\"section\">\n            <Alert type=\"error\" message={contactAdd.errorContent} closable={true} />\n          </Col>\n        )}\n        <Col span={24} className=\"section\">\n          <Row>\n            <Col span={6}>Kickname</Col>\n            <Col span={18}>\n              <Input value={contactAdd.contact.kickname} onChange={addContactKicknameChangeHandler} />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24} className=\"section\">\n          <Row>\n            <Col span={6}>Email</Col>\n            <Col span={18}>\n              {contactAdd.contact.emails!.map((email, index) => (\n                <Row key={index}>\n                  <Col span={18}>\n                    <Input value={email} onChange={(e) => addContactEmailChangeHandler(e, index)} />\n                  </Col>\n                  <Col span={4} offset={2}>\n                    {index === 0 ? (\n                      <Button onClick={addContactEmailHandler}>\n                        <AddIcon />\n                      </Button>\n                    ) : (\n                      <Button onClick={() => removeContactEmailHandler(index)}>\n                        <Remove />\n                      </Button>\n                    )}\n                  </Col>\n                </Row>\n              ))}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\n\nexport default React.memo(ContactAdd);\n","/home/fouad/email/src/App.tsx",[],"/home/fouad/email/src/utils/gmail/GrabContact.ts",[],"/home/fouad/email/src/components/design/ContactItem.tsx",[],"/home/fouad/email/src/components/settings/settings/Settings.tsx",["172","173"],"/home/fouad/email/src/constant/constant.ts",["174","175"],"import { GmailReducerInterface } from '../reducer/gmailReducer';\n\nexport const emailRegexp = /([a-zA-Z0-9\\-\\.]{1,}@[a-zA-Z0-9\\-\\.]{1,}\\.[a-zA-Z0-9]{1,})/;\n\nexport const initialReducerValue: GmailReducerInterface = {\n  currentLabel: 'ALL',\n  nextPageToken: '',\n  cache: [],\n  labels: [],\n  contacts: [],\n  selectedContact: { kickname: '', emails: [] },\n  currentContact: '',\n  messageShowModel: 'snippet',\n  userEmail: '',\n  editor: 'simple',\n  messageThread: 'new thread',\n};\n",["176","177"],"/home/fouad/email/src/components/mail/ListMessages.tsx",[],"/home/fouad/email/src/components/Loader/Loader.tsx",[],"/home/fouad/email/src/components/Inputs/TextareaChat.tsx",["178","179"],"import React, { useCallback, useState } from 'react';\nimport { Button, Col, Input, Row, Upload, Modal } from 'antd';\nimport { Add } from '@material-ui/icons';\nimport { RcFile, UploadFile } from 'antd/lib/upload/interface';\nimport { Base64 } from 'js-base64';\n\nconst { TextArea } = Input;\n\nconst { error } = Modal;\n\ninterface TextAreaInterface {\n  to: string;\n  onSubmit: (content: string, header: string) => any;\n}\n\nexport const TextAreaChat: React.FC<TextAreaInterface> = ({ onSubmit, to }) => {\n  const [content, setContent] = useState<string>('');\n  const [filesContent, setFilesContent] = useState<{ filename: string; size: number; content: string; type: string; id: string; file: RcFile }[]>([]);\n\n  const onChangeHandler = useCallback((event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    event.stopPropagation();\n    const {\n      target: { value },\n    } = event;\n    setContent(value);\n  }, []);\n\n  const onKeyDownHandler = useCallback(\n    (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      event.stopPropagation();\n      const { altKey, shiftKey, code, keyCode } = event;\n\n      if ((altKey || shiftKey) && (code === '\\n' || keyCode === 13)) {\n        return void 0;\n      } else if (code === '\\n' || keyCode === 13) {\n        event.preventDefault();\n        const header = filesContent.length\n          ? 'Content-Type: multipart/mixed; boundary=\"emplorium_boundary\"\\r\\nMIME-Version: 1.0\\r\\n'\n          : 'Content-Type: text/plain; charset=\"UTF-8\"\\r\\n';\n        const email = `${filesContent.length === 0 ? '' : '--emplorium_boundary\\r\\n'}${content}\n${filesContent\n  .map(\n    (file) => `\n\n--emplorium_boundary\nContent-Type: ${file.type}\nContent-Transfer-Encoding: 8bit\nContent-Disposition: attachment; filename=\"${file.filename}\"\n\n${file.content}\n\n\n`\n  )\n  .join('')}\n\n${filesContent.length === 0 ? '' : '--emplorium_boundary--'}\n`;\n        onSubmit(email, header);\n        setContent('');\n        setFilesContent([]);\n      }\n    },\n    [content, filesContent]\n  );\n\n  const beforeUpload = useCallback(\n    (file: RcFile) => {\n      let totalSize = file.size;\n      for (const file of filesContent) {\n        totalSize += file.size;\n      }\n      if (totalSize / 1024 ** 2 > 25) {\n        error({\n          title: 'Limit exceed',\n          content: 'Cannot select files more than 25MB in Total',\n        });\n      } else {\n        const { size, name, type, uid } = file;\n        file\n          .text()\n          .then((str) => {\n            console.log(str);\n            setFilesContent((state) => [...state, { size, type, filename: name, content: str, file, id: uid }]);\n          })\n          .catch(() =>\n            error({\n              title: 'Faild to parse the file to a text',\n              content:\n                \"The process of parsing the file to text couldn't be done of some reason, we are sorry if you can not upload that file.\\nSo please try again :)\",\n            })\n          );\n      }\n      return false;\n    },\n    [filesContent]\n  );\n\n  const onRemove = useCallback((file: UploadFile<any>) => {\n    const uid = file.uid;\n    setFilesContent((state) => state.filter((file) => file.id !== uid));\n  }, []);\n\n  return (\n    <Row>\n      <Col span={4}>\n        <Upload beforeUpload={beforeUpload} fileList={filesContent.map((e) => e.file)} onRemove={onRemove}>\n          <Button>\n            <Add />\n          </Button>\n        </Upload>\n      </Col>\n      <Col span={20}>\n        <TextArea\n          onKeyDown={onKeyDownHandler}\n          onChange={onChangeHandler}\n          placeholder={`Message to ${to}`}\n          value={content}\n          autoSize={{ maxRows: 5, minRows: 1 }}\n          className=\"textarea-chat\"\n        />\n      </Col>\n    </Row>\n  );\n};\n","/home/fouad/email/src/components/settings/global/GeneralSettings.tsx",["180"],"import { Button, Col, Row, Tag } from 'antd';\nimport React, { useCallback, useContext, useState } from 'react';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AddIcon from '@material-ui/icons/Add';\nimport { GmailContext } from '../../../context/Gmail';\nimport { Contacts } from '@material-ui/icons';\nimport ContactAdd from '../ContactAdd/ContactAdd';\nimport Settings from '../settings/Settings';\n\nconst GeneralSettings = () => {\n  const [showSettings, setShowSettings] = useState(false);\n  const [showAddContact, setShowAddContact] = useState(false);\n\n  const { state } = useContext(GmailContext);\n\n  const settingsShowHandler = useCallback(() => {\n    setShowSettings((state) => !state);\n  }, []);\n\n  const addContactShowHandler = useCallback(() => {\n    setShowAddContact((state) => !state);\n  }, []);\n\n  return (\n    <Row className=\"controls\">\n      <Col span={19} className=\"contacts-number\">\n        Number of contacts\n        <Tag color=\"green\" className=\"tag\">\n          {state!.contacts.length}\n        </Tag>\n      </Col>\n      <Col span={5} className=\"controllers\">\n        <Button type=\"ghost\" onClick={addContactShowHandler}>\n          <AddIcon />\n        </Button>\n        <Button type=\"ghost\" onClick={settingsShowHandler}>\n          <SettingsIcon />\n        </Button>\n      </Col>\n      <ContactAdd visible={showAddContact} onOk={addContactShowHandler} onCancel={addContactShowHandler} />\n      <Settings visible={showSettings} onOk={settingsShowHandler} onCancel={settingsShowHandler} />\n    </Row>\n  );\n};\n\nexport default React.memo(GeneralSettings);\n","/home/fouad/email/src/utils/gmail/emails.ts",[],"/home/fouad/email/src/utils/gmail/EmailContentFetch.ts",[],"/home/fouad/email/src/components/Error/ErrorLoading.tsx",[],"/home/fouad/email/src/utils/gmail/SendMail.ts",[],"/home/fouad/email/src/utils/gmail/ListEmailId.ts",[],"/home/fouad/email/src/reducer/gmailReducer.ts",["181"],"export enum GMAIL_REDUCER_TYPE {\n  SET_MESSAGES_ID,\n  SET_MESSAGES_CONTENT,\n  SET_MESSAGES,\n  SET_CURRENT_LABEL,\n  SET_LABELS,\n  SET_CONTACTS,\n  SET_SELECT,\n  SET_CURRENT_CONTACT,\n  SET_MESSAGE_MODEL_SHOW,\n  SET_USER_EMAIL,\n  SET_EDITOR_TYPE,\n  SET_MESSAGE_THREAD,\n}\n\nexport interface GmailReducerInterface {\n  cache: Array<{ email: string[]; nextPageToken: string; messages: Array<{ email: string; message: any }> }>;\n  nextPageToken: string;\n  currentLabel: string;\n  labels: string[];\n  contacts: { kickname: string; emails: string[] }[];\n  selectedContact: { kickname: string; emails: string[] };\n  currentContact: string;\n  userEmail: string;\n  messageShowModel: 'snippet' | 'complete as text' | 'complete as html';\n  editor: 'simple' | 'advanced';\n  messageThread: 'new thread' | 'last thread';\n}\n\nexport const GmailReducer = (state: GmailReducerInterface, action: { type: GMAIL_REDUCER_TYPE; payload: Partial<GmailReducerInterface> }) => {\n  switch (action.type) {\n    case GMAIL_REDUCER_TYPE.SET_CURRENT_LABEL: {\n      if (typeof action.payload.currentLabel === 'string') {\n        return { ...state, currentLabel: action.payload.currentLabel };\n      }\n      break;\n    }\n\n    case GMAIL_REDUCER_TYPE.SET_LABELS: {\n      if (typeof action.payload.labels === 'object' && Array.isArray(action.payload.labels)) {\n        return { ...state, labels: action.payload.labels };\n      }\n      break;\n    }\n\n    case GMAIL_REDUCER_TYPE.SET_CONTACTS: {\n      if (typeof action.payload.contacts === 'object' && Array.isArray(action.payload.contacts)) {\n        return { ...state, contacts: action.payload.contacts };\n      }\n      break;\n    }\n\n    case GMAIL_REDUCER_TYPE.SET_CURRENT_CONTACT: {\n      if (typeof action.payload.currentContact === 'string') {\n        return { ...state, currentContact: action.payload.currentContact };\n      }\n      break;\n    }\n\n    case GMAIL_REDUCER_TYPE.SET_SELECT: {\n      return { ...state, selectedContact: action.payload.selectedContact! };\n    }\n\n    case GMAIL_REDUCER_TYPE.SET_MESSAGE_MODEL_SHOW: {\n      if (typeof action.payload.messageShowModel === 'string') {\n        return { ...state, messageShowModel: action.payload.messageShowModel };\n      }\n      break;\n    }\n\n    case GMAIL_REDUCER_TYPE.SET_USER_EMAIL: {\n      if (typeof action.payload.userEmail === 'string') {\n        return { ...state, userEmail: action.payload.userEmail };\n      }\n      break;\n    }\n\n    case GMAIL_REDUCER_TYPE.SET_EDITOR_TYPE: {\n      if (typeof action.payload.editor === 'string') {\n        return { ...state, editor: action.payload.editor };\n      }\n      break;\n    }\n\n    case GMAIL_REDUCER_TYPE.SET_EDITOR_TYPE: {\n      if (typeof action.payload.messageThread === 'string') {\n        return { ...state, messageThread: action.payload.messageThread };\n      }\n      break;\n    }\n\n    case GMAIL_REDUCER_TYPE.SET_MESSAGES: {\n      const { cache: Messages } = action.payload;\n      if (typeof Messages === 'object' && Array.isArray(Messages) && Messages.length === 1) {\n        // Search for collection who stores those emails\n        const found = state.cache.find((collection) => {\n          const state = collection.email.reduce(function (prev, cur) {\n            return prev && Messages[0].email.includes(cur);\n          }, true);\n          return state;\n        });\n\n        if (found) {\n          // The collection exists\n          found.messages = [...Messages[0].messages, ...found.messages];\n          found.nextPageToken = Messages[0].nextPageToken;\n          return { ...state };\n        } else {\n          return { ...state, cache: [...state.cache, Messages[0]] };\n        }\n      }\n      break;\n    }\n  }\n  return state;\n};\n","/home/fouad/email/src/utils/gmail/LoadContactGmail.ts",[],"/home/fouad/email/src/components/mail/AttachedFiles.tsx",["182","183"],"import { FormatSizeTwoTone } from '@material-ui/icons';\nimport { Col, Row, Typography } from 'antd';\nimport { Base64 } from 'js-base64';\nimport React from 'react';\nimport { FileIcon, defaultStyles } from 'react-file-icon';\n\ninterface AttachedFilesProps {\n  message: any;\n}\n\nconst transformFileSizeUnit = (size: number) => {\n  let i = 0;\n  const units = ['B', 'KB', 'MB', 'KB', 'GB', 'TB'];\n  while (size / 1024 > 1) {\n    ++i;\n    size /= 1024;\n  }\n  return `${size.toFixed(2)}${units[i]}`;\n};\n\nconst AttachedFiles: React.FC<AttachedFilesProps> = ({ message }) => {\n  const {\n    payload: { parts },\n  } = message;\n\n  const downloadFile = async (attachementId: string, part: any) => {\n    const { filename, mimeType } = part;\n    const params = {\n      userId: 'me',\n      messageId: message.id,\n      id: attachementId,\n    };\n    console.log('Sending request to download', params);\n    //@ts-ignore\n    const response = await gapi.client.gmail.users.messages.attachments.get(params);\n    const { data, size } = response.result;\n    const contentType = mimeType || '';\n    const sliceSize = size || 512;\n\n    var byteCharacters = atob(data.replace(/-/g, '+').replace(/_/g, '/'));\n    var byteArrays = [];\n\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      var byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      var byteArray = new Uint8Array(byteNumbers);\n\n      byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, { type: contentType });\n    let urlBlob = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = urlBlob;\n    a.download = filename;\n    a.click();\n    a.remove();\n  };\n\n  const attachmentParts = Array.isArray(parts) ? parts.filter((part: any) => part.body.attachmentId !== void 0) : [];\n  return (\n    <Row className=\"attachements\">\n      {attachmentParts.length > 0 && (\n        <Col span={24} className=\"attachement-title\">\n          <Typography.Title level={5}>Attached files</Typography.Title>\n        </Col>\n      )}\n      {attachmentParts.map((attachementPart: any, index: number) => {\n        const extention = attachementPart.filename.replace(/^.+\\.([a-zA-Z0-9]+)$/, '$1');\n        const size = transformFileSizeUnit(attachementPart.body.size);\n        console.log(attachementPart);\n        return (\n          <Col span={4} key={index} className=\"file-attached\" onClick={() => downloadFile(attachementPart.body.attachmentId, attachementPart)}>\n            <Row>\n              <Col span={24} className=\"file-icon\">\n                <span className=\"file-size\">{size}</span>\n                {/**@ts-ignore */}\n                <FileIcon extension={extention} {...defaultStyles[extention]} />\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24} className=\"file-name\">\n                {attachementPart.filename}\n              </Col>\n            </Row>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n};\n\nexport default React.memo(AttachedFiles);\n","/home/fouad/email/src/utils/gmail/GetProfileEmail.ts",[],"/home/fouad/email/src/components/design/EmailText.tsx",[],"/home/fouad/email/src/index.js",[],["184","185"],"/home/fouad/email/src/utils/gmail/Connect.ts",[],"/home/fouad/email/src/utils/gmail/Label.ts",[],"/home/fouad/email/src/utils/gmail/getMessageBodyAsText.ts",["186"],"/home/fouad/email/src/utils/gmail/getMessageBodyAsHTML.ts",[],"/home/fouad/email/src/enum/gmail/GmailReducer.ts",[],"/home/fouad/email/src/components/mail/RightSide.tsx",[],{"ruleId":"187","severity":1,"message":"188","line":20,"column":6,"nodeType":"189","endLine":20,"endColumn":29,"suggestions":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":10,"nodeType":"197","messageId":"198","endLine":1,"endColumn":16},{"ruleId":"195","severity":1,"message":"199","line":2,"column":17,"nodeType":"197","messageId":"198","endLine":2,"endColumn":25},{"ruleId":"191","replacedBy":"200"},{"ruleId":"193","replacedBy":"201"},{"ruleId":"195","severity":1,"message":"202","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":16},{"ruleId":"191","replacedBy":"203"},{"ruleId":"193","replacedBy":"204"},{"ruleId":"187","severity":1,"message":"205","line":25,"column":6,"nodeType":"189","endLine":25,"endColumn":15,"suggestions":"206"},{"ruleId":"187","severity":1,"message":"207","line":168,"column":6,"nodeType":"189","endLine":168,"endColumn":8,"suggestions":"208"},{"ruleId":"187","severity":1,"message":"209","line":170,"column":27,"nodeType":"189","endLine":170,"endColumn":105,"suggestions":"210"},{"ruleId":"187","severity":1,"message":"211","line":208,"column":5,"nodeType":"189","endLine":208,"endColumn":44,"suggestions":"212"},{"ruleId":"195","severity":1,"message":"213","line":30,"column":9,"nodeType":"197","messageId":"198","endLine":30,"endColumn":32},{"ruleId":"214","severity":1,"message":"215","line":74,"column":31,"nodeType":"216","messageId":"217","endLine":74,"endColumn":32,"suggestions":"218"},{"ruleId":"214","severity":1,"message":"219","line":74,"column":33,"nodeType":"216","messageId":"217","endLine":74,"endColumn":34,"suggestions":"220"},{"ruleId":"214","severity":1,"message":"215","line":74,"column":48,"nodeType":"216","messageId":"217","endLine":74,"endColumn":49,"suggestions":"221"},{"ruleId":"187","severity":1,"message":"222","line":114,"column":5,"nodeType":"189","endLine":114,"endColumn":17,"suggestions":"223"},{"ruleId":"187","severity":1,"message":"224","line":41,"column":6,"nodeType":"189","endLine":41,"endColumn":16,"suggestions":"225"},{"ruleId":"187","severity":1,"message":"226","line":51,"column":6,"nodeType":"189","endLine":51,"endColumn":13,"suggestions":"227"},{"ruleId":"214","severity":1,"message":"215","line":3,"column":42,"nodeType":"216","messageId":"217","endLine":3,"endColumn":43,"suggestions":"228"},{"ruleId":"214","severity":1,"message":"215","line":3,"column":62,"nodeType":"216","messageId":"217","endLine":3,"endColumn":63,"suggestions":"229"},{"ruleId":"191","replacedBy":"230"},{"ruleId":"193","replacedBy":"231"},{"ruleId":"195","severity":1,"message":"232","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"205","line":64,"column":5,"nodeType":"189","endLine":64,"endColumn":28,"suggestions":"233"},{"ruleId":"195","severity":1,"message":"234","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"236","line":85,"column":5,"nodeType":"237","messageId":"238","endLine":90,"endColumn":6},{"ruleId":"195","severity":1,"message":"239","line":1,"column":10,"nodeType":"197","messageId":"198","endLine":1,"endColumn":27},{"ruleId":"195","severity":1,"message":"232","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":16},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"240","line":13,"column":9,"nodeType":"197","messageId":"198","endLine":13,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["241"],"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["242"],["243"],"'Header' is defined but never used.",["242"],["243"],"React Hook useCallback has a missing dependency: 'onSubmit'. Either include it or remove the dependency array. If 'onSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["244"],"React Hook useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["245"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar', 'messages', and 'state.userEmail'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["246"],"React Hook useCallback has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["247"],"'addContactCancelHandler' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["248","249"],"Unnecessary escape character: \\-.",["250","251"],["252","253"],"React Hook useCallback has missing dependencies: 'onOk', 'setContacts', and 'state'. Either include them or remove the dependency array. If 'onOk' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["254"],"React Hook useCallback has missing dependencies: 'onOk' and 'saveSettings'. Either include them or remove the dependency array. If 'onOk' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["255"],"React Hook useCallback has a missing dependency: 'onCancel'. Either include it or remove the dependency array. If 'onCancel' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["256"],["257","258"],["259","260"],["242"],["243"],"'Base64' is defined but never used.",["261"],"'Contacts' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'FormatSizeTwoTone' is defined but never used.","'decode' is assigned a value but never used.",{"desc":"262","fix":"263"},"no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"messageId":"272","fix":"273","desc":"274"},{"messageId":"275","fix":"276","desc":"277"},{"messageId":"272","fix":"278","desc":"274"},{"messageId":"275","fix":"279","desc":"277"},{"messageId":"272","fix":"280","desc":"274"},{"messageId":"275","fix":"281","desc":"277"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"messageId":"272","fix":"288","desc":"274"},{"messageId":"275","fix":"289","desc":"277"},{"messageId":"272","fix":"290","desc":"274"},{"messageId":"275","fix":"291","desc":"277"},{"desc":"292","fix":"293"},"Update the dependencies array to be: [clicked, props]",{"range":"294","text":"295"},"Update the dependencies array to be: [content, onSubmit]",{"range":"296","text":"297"},"Update the dependencies array to be: [enqueueSnackbar]",{"range":"298","text":"299"},"Update the dependencies array to be: [state.currentContact, state.currentLabel, state.selectedContact, state.cache, state.userEmail, messages, enqueueSnackbar]",{"range":"300","text":"301"},"Update the dependencies array to be: [enqueueSnackbar, state.currentContact, state.userEmail]",{"range":"302","text":"303"},"removeEscape",{"range":"304","text":"305"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"306","text":"307"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"308","text":"305"},{"range":"309","text":"307"},{"range":"310","text":"305"},{"range":"311","text":"307"},"Update the dependencies array to be: [contactAdd.contact, onOk, setContacts, state]",{"range":"312","text":"313"},"Update the dependencies array to be: [onOk, saveSettings, settings]",{"range":"314","text":"315"},"Update the dependencies array to be: [onCancel, state]",{"range":"316","text":"317"},{"range":"318","text":"305"},{"range":"319","text":"307"},{"range":"320","text":"305"},{"range":"321","text":"307"},"Update the dependencies array to be: [content, filesContent, onSubmit]",{"range":"322","text":"323"},[550,573],"[clicked, props]",[749,758],"[content, onSubmit]",[6090,6092],"[enqueueSnackbar]",[6122,6200],"[state.currentContact, state.currentLabel, state.selectedContact, state.cache, state.userEmail, messages, enqueueSnackbar]",[7302,7341],"[enqueueSnackbar, state.currentContact, state.userEmail]",[2721,2722],"",[2721,2721],"\\",[2723,2724],[2723,2723],[2738,2739],[2738,2738],[4164,4176],"[contactAdd.contact, onOk, setContacts, state]",[1429,1439],"[onOk, saveSettings, settings]",[1705,1712],"[onCancel, state]",[107,108],[107,107],[127,128],[127,127],[1964,1987],"[content, filesContent, onSubmit]"]